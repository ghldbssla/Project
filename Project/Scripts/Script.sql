CREATE TABLE MOVIE_USER(
	userid			VARCHAR2(100),		-- 아이디 (PK)
	userpw			VARCHAR2(500),		-- 비밀번호
	username		VARCHAR2(100),		-- 별명
	useremail		VARCHAR2(500),		-- 이메일
	userphone		VARCHAR2(11),		-- 폰 번호
	useraddr		VARCHAR2(300),		-- 주소
	userbday		VARCHAR2(100),		-- 생년월일
	usermoney		NUMBER(38),		-- 돈
	CONSTRAINT USERS_PK PRIMARY KEY(USERID)
);
SELECT * FROM MOVIE_USER;
CREATE TABLE FAV_USER(
	userid VARCHAR2(100),
	M_TITLE VARCHAR2(100)
);

CREATE TABLE THEATER(
	T_SERIAL		VARCHAR2(100),	-- 영화관 고유 번호	EX)123 OR ABC
	T_NAME			VARCHAR2(100),	-- 영화관 이름		EX)CGV '강남'
	T_CITY			VARCHAR2(100),	-- 영화관 위치		EX)경기, 서울, 인천
	CONSTRAINT THEATER_PK PRIMARY KEY(T_NAME)
);
SELECT*FROM THEATER;

CREATE TABLE MOVIE_LIST(
	M_NAME		VARCHAR2(100),	-- 영화 제목		EX)소울
	M_DIRECTOR	VARCHAR2(100),	-- 영화 감독		EX)피트 닥터
	M_ACTOR		VARCHAR2(100),	-- 영화 배우		EX)제이미 폭스
	M_GENRE		VARCHAR2(100),	-- 영화 장르		EX)애니메이션
	M_RATE		VARCHAR2(100),	-- 영화 평점		EX)9.37
	CONSTRAINT MOVIE_PK PRIMARY KEY(M_NAME)
);

CREATE TABLE SCREEN_THEATER(
	userid			VARCHAR2(100),    -- USERID (FK)
	S_SCHEDULE_TIME 		VARCHAR2(100),	
	S_SEAT_CNT      		VARCHAR2(100),   -- 좌석 
	m_name			VARCHAR2(100),	 
	T_NAME			VARCHAR2(100),	 -- THEATER (FK) 
	SEATNUM 	VARCHAR2(100),  
	PAYMENT			VARCHAR2(100),   -- 결제여부
	CONSTRAINT MOVIE_USER_FK FOREIGN KEY(USERID)
	REFERENCES MOVIE_USER(USERID) ON DELETE CASCADE,	-- MOVIE_USER의 FK
	CONSTRAINT THEATER_FK FOREIGN KEY(T_NAME)
	REFERENCES THEATER(T_NAME) ON DELETE CASCADE	-- THEATER의 FK
);
SELECT*FROM SCREEN_THEATER;

CREATE TABLE MOVIE_LIST_SOON(
   M_NAME      VARCHAR2(100),   -- 영화 제목      EX)소울
   M_DIRECTOR   VARCHAR2(100),   -- 영화 감독      EX)피트 닥터
   M_ACTOR      VARCHAR2(100),   -- 영화 배우      EX)제이미 폭스
   M_GENRE   VARCHAR2(100),   -- 영화 장르      EX)애니메이션
   CONSTRAINT MOVIE_SOON_PK PRIMARY KEY(M_NAME)
);

CREATE TABLE COUPON(
	USERID			VARCHAR2(100),
	COUPON_NAME		VARCHAR2(100),
	CONSTRAINT USERID_FK FOREIGN KEY(USERID)
	REFERENCES MOVIE_USER(USERID) ON DELETE CASCADE
);

DROP TABLE COUPON;
SELECT * FROM COUPON;